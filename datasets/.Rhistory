library(GGally)
setwd("/home/diego/Documents/Aprendizaje_Estadistica/datasets")
options(digits=4)
CADdata <- read.table("cadmium.txt",header=TRUE, sep=" ", dec=".")
str(CADdata)
CADdata$group=factor(CADdata$group, levels=c(1,2,3), labels=c("High","Low","No") )
str(CADdata)
X11()
ggpairs(data=CADdata, title="Datos", aes(colour = group))
X11()
par(mfrow=c(1,2)); par(mar=c(4,4,2,1.5))
boxplot(vitcap ~ group, data = CADdata, col = "white", outline=FALSE)
stripchart(vitcap ~ group, data = CADdata,
method = "jitter",
pch = 19,
col = 2:4,
vertical = TRUE,
add = TRUE)
boxplot(age ~ group, data = CADdata, col = "white", outline=FALSE)
stripchart(age ~ group, data = CADdata,
method = "jitter",
pch = 19,
col = 2:4,
vertical = TRUE,
add = TRUE)
summary(CADdata[CADdata$group=="High",])
CADdata=CADdata[CADdata$age>=39,]
X11()
par(mfrow=c(1,2)); par(mar=c(4,4,2,1.5))
plot(CADdata$age, CADdata$vitcap, col=c("green","red","blue")[CADdata$group],xlab = "Age",
ylab = "Vital Capacity (L)",xlim=c(35,68), ylim=c(2.5,5.6),
pch=c(16,16,16), main = "Exposure to cadmium")
legend(60,5.8, levels(CADdata$group),
col=c("green","red","blue"), pch = c(16,16,16) )
boxplot(vitcap ~ group, data = CADdata, col = "white", outline=FALSE)
stripchart(vitcap ~ group, data = CADdata,
method = "jitter",
pch = 19,
col = c("green","red","blue"),
vertical = TRUE,
add = TRUE)
levels(CADdata$group)
View(CADdata)
# Aquí empieza el análisis de modelos de regresión
fit <- lm(vitcap ~ age * group, data = CADdata)
summary(fit)
library(multcomp)
K=matrix(c(0,0,0,0,1,0,          # Se van a contrastar dos variables
0,0,0,0,0,1), ncol=6, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
K=matrix(c(0,0,0,0,1,0,
0,0,0,0,0,1,           # porque son 3 combinaciones lineales
0,0,0,0,1,-1), ncol=6, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fit, linfct=K, rhs=m))
fitred <- lm(vitcap ~ age + group + I(age*(group=="No")), data = CADdata)
summary(fitred)
fitred2 <- lm(vitcap ~ age + I(group=="No") + I(age*(group=="No")), data = CADdata)
summary(fitred2)
fitredHyL <- function(X2) {fitred2$coefficients[1]+ fitred2$coefficients[2]*X2}
fitredN <- function(X2) {fitred2$coefficients[1]+fitred2$coefficients[3]+ (fitred2$coefficients[2]+fitred2$coefficients[4])*X2}
X11()
with(CADdata, plot(age, vitcap, col=c("red", "green", "blue")[CADdata[,1]] , pch = c(16,16,16)))
legend("topright",levels(CADdata[,1]), col=c("red", "green", "blue"), pch = c(16,16,16), pt.cex=1.5,cex = .9, y.intersp = 1.4 , bty="n" )
curve(fitredHyL, from = min(CADdata$age), to = max(CADdata$age),
col = "red", add = T)
curve(fitredN, from = min(CADdata$age), to = max(CADdata$age),
col = "blue", add = T)
K=matrix(c(0,0,1,50), ncol=4, nrow=1, byrow=TRUE)
m=c(0)
summary(glht(fitred2, linfct=K, rhs=m))
K=matrix(c(0,0,1,55), ncol=4, nrow=1, byrow=TRUE)
m=c(0)
summary(glht(fitred2, linfct=K, rhs=m, alternative="greater"))
X11()
par(mfrow = c(1,2))
with(CADdata, plot(age, vitcap, col=c("red", "green", "blue")[CADdata[,1]] , pch = c(16,16,16)))
legend("topright",levels(CADdata[,1]), col=c("red", "green", "blue"), pch = c(16,16,16), pt.cex=1.5,cex = .9, y.intersp = 1.4 , bty="n" )
summary(CADdata)
age <- seq(from = 39, to = 65, by = .5)
length(age)
#Para la banda del grupo expuesto (high o low)
#E(Y;group=High (low), age)= b0 + b1 age
KH <- cbind(1, age, 0, 0)
(KH)
KN <- cbind(1, age, 1,age)
(KN)
K=rbind(KH, KN)
fitE <- glht(fitred2, linfct = K)
fitci <- confint(fitE, level = 0.90)
lines(age, coef(fitE)[1:53], col="red")
fitAlt=lm(y~I(X1c=="A2")+I(X1c=="A3")+X2, data=Datos)
rm(list = ls(all.names = TRUE))
gc()
setwd("/home/diego/Documents/Aprendizaje_Estadistica/datasets")
Datos=read.csv("ejemplo3RLM.csv", header=TRUE )
summary(Datos)
str(Datos)
Datos$X1c=factor(Datos$X1c)
str(Datos)
View(Datos)
par(mfrow=c(1,1),mar=c(4.5,4.5,1,1))
plot(Datos)
library(GGally)
ggpairs(Datos)
ggpairs(data=Datos, title="Datos", aes(colour = X1c))
X11()
with(Datos, plot(X2, y, col=c("red", "brown", "blue")[Datos[,c("X1c")]] ))
legend("topleft",levels(Datos[,c("X1c")]), col=c("red", "brown", "blue"), pch = c(0,0,0),  pt.cex=1.5,cex = .9, y.intersp = 1.3 , bty="n")
levels(Datos$X1c)
fit=lm(y~X1c+X2, data=Datos)
summary(fit)
fitAlt=lm(y~I(X1c=="A2")+I(X1c=="A3")+X2, data=Datos)
summary(fitAlt)
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0), ncol=4, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
fitred=lm(y~X2, data=Datos)
anova(fitred, fit)
fit=lm(y~X1c+X2, data=Datos)
summary(fit)
fitAlt=lm(y~I(X1c=="A2")+I(X1c=="A3")+X2, data=Datos)
summary(fitAlt)
fitAlt2=lm(y~relevel(X1c, "A3")+X2, data=Datos)
summary(fitAlt2)
fitAlt3=lm(y~I(X1c=="A1")+I(X1c=="A2")+X2, data=Datos)
summary(fitAlt3)
levels(Datos$X1c)
Datos$X1c=relevel(Datos$X1c, "A3")
levels(Datos$X1c)
levels(Datos$X1c)
# se cambia la categoría de referencia y ahora será A3
Datos$X1c=relevel(Datos$X1c, "A3")
levels(Datos$X1c)
Datos$X1c=factor(Datos$X1c, levels=c("A1","A2","A3"))
# Levels ya define el orden de tus niveles
levels(Datos$X1c)
summary(fit)
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0), ncol=4, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fit, linfct=K, rhs=m), test=Ftest())
fitred=lm(y~X2, data=Datos)
anova(fitred, fit)
drop1(fit, test = "F")
install.packages("car")
library(car)
summary(fit)
